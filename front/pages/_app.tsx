import "../styles/globals.scss";
// import type { AppProps } from "next/app";
import Head from "next/head";
import "macro-css";
import { setUserData } from "../redux/slices/user";
import { wrapper } from "../redux/store";
import { Api } from "../utils/api";
import { CssBaseline } from "@mui/material";
import { GoogleOAuthProvider } from "@react-oauth/google";
import { NextComponentType } from "next";

interface AppProps {
  Component: NextComponentType;
  pageProps: any;
}

function App({ Component, pageProps: { session, ...pageProps } }: AppProps) {
  return (
    <>
      <Head>
        <title>myPorto</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="img/logomin.svg" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="true" />
        <link
          href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap"
          rel="stylesheet"
        />
        <script src="https://accounts.google.com/gsi/client" async defer></script>
      </Head>

      <CssBaseline />
      <GoogleOAuthProvider clientId="328752187322-52a61uq1d8s8mv7nng3mgv2uca4aeh37.apps.googleusercontent.com">
        <Component {...pageProps} />
      </GoogleOAuthProvider>
    </>
  );
}

App.getInitialProps = wrapper.getInitialAppProps((store) => async ({ ctx, Component }) => {
  try {
    const userData = await Api(ctx).user.getMe();

    store.dispatch(setUserData(userData));
  } catch (error) {
    if (ctx.asPath === "/write") {
      ctx.res?.writeHead(302, { Location: "/403" });
      ctx.res?.end();
    }
    console.log(error);
  }
  return {
    pageProps: {
      ...(Component.getInitialProps ? await Component.getInitialProps({ ...ctx, store }) : {}),
    },
  };
});

export default wrapper.withRedux(App);
